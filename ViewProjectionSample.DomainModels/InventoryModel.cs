




//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using Intersoft.Crosslight;
using Intersoft.Crosslight.Data;
using Intersoft.Crosslight.Data.EntityModel;

namespace MyInventory.DomainModels
{
    public partial class Category : EntityBase
    {
        #region Constructors

        public Category()
        {
        }
    
        protected override void Initialize()
        {
            base.Initialize();
            
            this.Items = new RelatedList<Item>(this);
        }

        #endregion
    
        #region Property Definitions

        public static EntityProperty CategoryIDPropertyMetadata =
            EntityMetadata.Register(new DataEntityProperty<Category, int>("CategoryID", false, true, true, ""));

        public static EntityProperty NamePropertyMetadata =
            EntityMetadata.Register(new DataEntityProperty<Category, string>("Name", false, false, false, ""));

        public static EntityProperty ItemsPropertyMetadata = 
            EntityMetadata.Register(new NavigationListEntityProperty<Category, RelatedList<Item>>("Items", false, "", QueryDirection.Children));


        #endregion
    
        #region Properties

        public int CategoryID 
	    { 
		    get { return (int)this.GetValue(CategoryIDPropertyMetadata); } 
		    set { this.SetValue(CategoryIDPropertyMetadata, value); } 
	    }

        public string Name 
	    { 
		    get { return (string)this.GetValue(NamePropertyMetadata); } 
		    set { this.SetValue(NamePropertyMetadata, value); } 
	    }

        public RelatedList<Item> Items 
	    { 
	    	get { return (RelatedList<Item>)this.GetValue(ItemsPropertyMetadata); } 
	    	set { this.SetValue(ItemsPropertyMetadata, value); } 
	    }


        #endregion
    }
    public partial class Item : EntityBase
    {
    
        #region Property Definitions

        public static EntityProperty ItemIDPropertyMetadata =
            EntityMetadata.Register(new DataEntityProperty<Item, int>("ItemID", false, true, true, ""));

        public static EntityProperty NamePropertyMetadata =
            EntityMetadata.Register(new DataEntityProperty<Item, string>("Name", false, false, false, ""));

        public static EntityProperty ImagePropertyMetadata =
            EntityMetadata.Register(new DataEntityProperty<Item, string>("Image", true, false, false, ""));

        public static EntityProperty CategoryIDPropertyMetadata =
            EntityMetadata.Register(new DataEntityProperty<Item, int>("CategoryID", false, false, false, "Category"));

        public static EntityProperty QtyPropertyMetadata =
            EntityMetadata.Register(new DataEntityProperty<Item, Nullable<int>>("Qty", true, false, false, ""));

        public static EntityProperty PricePropertyMetadata =
            EntityMetadata.Register(new DataEntityProperty<Item, Nullable<decimal>>("Price", true, false, false, ""));

        public static EntityProperty LocationPropertyMetadata =
            EntityMetadata.Register(new DataEntityProperty<Item, string>("Location", true, false, false, ""));

        public static EntityProperty DescriptionPropertyMetadata =
            EntityMetadata.Register(new DataEntityProperty<Item, string>("Description", true, false, false, ""));

        public static EntityProperty SerialNumberPropertyMetadata =
            EntityMetadata.Register(new DataEntityProperty<Item, string>("SerialNumber", true, false, false, ""));

        public static EntityProperty PurchaseDatePropertyMetadata =
            EntityMetadata.Register(new DataEntityProperty<Item, Nullable<System.DateTime>>("PurchaseDate", true, false, false, ""));

        public static EntityProperty SoldPropertyMetadata =
            EntityMetadata.Register(new DataEntityProperty<Item, bool>("Sold", false, false, false, ""));

        public static EntityProperty SellDatePropertyMetadata =
            EntityMetadata.Register(new DataEntityProperty<Item, Nullable<System.DateTime>>("SellDate", true, false, false, ""));

        public static EntityProperty NotesPropertyMetadata =
            EntityMetadata.Register(new DataEntityProperty<Item, string>("Notes", true, false, false, ""));

        public static EntityProperty CategoryPropertyMetadata = 
            EntityMetadata.Register(new NavigationScalarEntityProperty<Item, Category>("Category", false, "", QueryDirection.Parent));


        #endregion
    
        #region Properties

        public int ItemID 
	    { 
		    get { return (int)this.GetValue(ItemIDPropertyMetadata); } 
		    set { this.SetValue(ItemIDPropertyMetadata, value); } 
	    }

        public string Name 
	    { 
		    get { return (string)this.GetValue(NamePropertyMetadata); } 
		    set { this.SetValue(NamePropertyMetadata, value); } 
	    }

        public string Image 
	    { 
		    get { return (string)this.GetValue(ImagePropertyMetadata); } 
		    set { this.SetValue(ImagePropertyMetadata, value); } 
	    }

        public int CategoryID 
	    { 
		    get { return (int)this.GetValue(CategoryIDPropertyMetadata); } 
		    set { this.SetValue(CategoryIDPropertyMetadata, value); } 
	    }

        public Nullable<int> Qty 
	    { 
		    get { return (Nullable<int>)this.GetValue(QtyPropertyMetadata); } 
		    set { this.SetValue(QtyPropertyMetadata, value); } 
	    }

        public Nullable<decimal> Price 
	    { 
		    get { return (Nullable<decimal>)this.GetValue(PricePropertyMetadata); } 
		    set { this.SetValue(PricePropertyMetadata, value); } 
	    }

        public string Location 
	    { 
		    get { return (string)this.GetValue(LocationPropertyMetadata); } 
		    set { this.SetValue(LocationPropertyMetadata, value); } 
	    }

        public string Description 
	    { 
		    get { return (string)this.GetValue(DescriptionPropertyMetadata); } 
		    set { this.SetValue(DescriptionPropertyMetadata, value); } 
	    }

        public string SerialNumber 
	    { 
		    get { return (string)this.GetValue(SerialNumberPropertyMetadata); } 
		    set { this.SetValue(SerialNumberPropertyMetadata, value); } 
	    }

        public Nullable<System.DateTime> PurchaseDate 
	    { 
		    get { return (Nullable<System.DateTime>)this.GetValue(PurchaseDatePropertyMetadata); } 
		    set { this.SetValue(PurchaseDatePropertyMetadata, value); } 
	    }

        public bool Sold 
	    { 
		    get { return (bool)this.GetValue(SoldPropertyMetadata); } 
		    set { this.SetValue(SoldPropertyMetadata, value); } 
	    }

        public Nullable<System.DateTime> SellDate 
	    { 
		    get { return (Nullable<System.DateTime>)this.GetValue(SellDatePropertyMetadata); } 
		    set { this.SetValue(SellDatePropertyMetadata, value); } 
	    }

        public string Notes 
	    { 
		    get { return (string)this.GetValue(NotesPropertyMetadata); } 
		    set { this.SetValue(NotesPropertyMetadata, value); } 
	    }

        public Category Category 
	    { 
	    	get { return (Category)this.GetValue(CategoryPropertyMetadata); } 
	    	set { this.SetValue(CategoryPropertyMetadata, value); } 
	    }


        #endregion
    }
}


